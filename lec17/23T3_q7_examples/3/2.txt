The ideas of Bjarne Stroustrup are very similar to the benefits of using rust.

For example, where he proposes the use of profiles to be used, a lot of the constraints of rust
already force users to adopt a similar mindset.

One example of this is the Explciit expressions of which guarantees were applied. (thus reassuring future readers).
This is similar to the rust doc safety comments.
Utilisation of this would result in code which is more reassuring to future users when compared to trusted code that may
be very old and hard to verify. This is a much more feasible implementation of the
safety garuantee that comes with rust safety comments, without the necessary work of converting all
of some codebase to Rust.

This is particularly relevant with the "many notions of safety", as code reviews can about unsafe functions
can help identify errors in many different areas of safety, as addressed by Stroustrup's slide

“Safety is not just type safety,”
highlighting resource leaks, overflows, memory corruption, timing errors,
concurrency errors, termination errors — and of course, type errors.

Peer reviews of code in a structured way under a profile system could help minimise these errors, which gives benefits similar to rust without
the need to adhere to all of rusts constraints for other languages.
